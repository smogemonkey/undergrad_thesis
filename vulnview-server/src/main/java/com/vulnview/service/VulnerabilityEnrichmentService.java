package com.vulnview.service;

import com.vulnview.entity.Component;
import com.vulnview.entity.Sbom;
import com.vulnview.dto.ComponentToEnrich;
import java.time.LocalDateTime;
import java.util.Optional;
import java.util.Map;
import java.util.function.Consumer;
import org.springframework.scheduling.annotation.Async;

public interface VulnerabilityEnrichmentService {
    /**
     * Asynchronously enrich vulnerabilities for all components in an SBOM
     * @param sbomId The ID of the SBOM to enrich
     */
    @Async("taskExecutor")
    void enrichVulnerabilitiesForSbomAsync(Long sbomId);

    /**
     * Asynchronously enrich vulnerabilities for a specific component
     * @param componentId The ID of the component to enrich
     */
    @Async("taskExecutor")
    void enrichVulnerabilitiesForComponentAsync(Long componentId);

    /**
     * Get EPSS score for a CVE
     * @param cveId The CVE ID
     * @return Optional containing the EPSS score if found
     */
    Optional<Double> getEpssScore(String cveId);

    /**
     * Get CISA KEV date for a CVE
     * @param cveId The CVE ID
     * @return Optional containing the CISA KEV date if found
     */
    Optional<LocalDateTime> getCisaKevDate(String cveId);

    /**
     * Check if a CVE is in CISA KEV
     * @param cveId The CVE ID
     * @return true if the CVE is in CISA KEV
     */
    boolean isInCisaKev(String cveId);

    /**
     * Enrich a vulnerability with additional data
     * @param vulnerability The vulnerability to enrich
     */
    void enrichVulnerability(com.vulnview.entity.Vulnerability vulnerability);

    /**
     * Check if a component requires enrichment
     * @param componentId The ID of the component to check
     * @return true if the component needs enrichment, false otherwise
     */
    boolean requiresEnrichment(Long componentId);

    void enrichComponent(ComponentToEnrich component, Consumer<Map<String, Object>> callback);
    void processAndLinkDependencies(Sbom sbom, String dependencyData, java.util.Map<String, Long> bomRefToSbomComponentIdMap);
} 